HTTP Request:
    When you go to duckduckgo.com, you are sending an HTTP request that says "send me the contents of your website at this address"
    That's doing a "get" request
    Uses HTTP to make that request


You can use lambda expressions in any code that requires instances of delegate types or expression trees.
For example, as an argument to the Task.Run(Action) method to pass the code that should be executed in the background.
You can also use lambda expressions when you write LINQ query expressions as the following example shows:
    int[] numbers = {2, 3, 4, 5};
    var squaredNumbers = numbers.Select(x => x * x);
    Console.WriteLine(string.Join(" ", squaredNumbers));
    // output: 4, 9, 16, 25

Expression lambda:
    (input-parameters) => expression
    returns result of expression
    Action line = () => Console.WriteLine();
    Func<int, int, bool> testEquality = (x, y) => x == y;
    Func<int, string, bool> isTooLong = (int x, string s) => s.Length > x;
        sometimes compiler can't infer input types, in which case you must explicitly specify the types
    
